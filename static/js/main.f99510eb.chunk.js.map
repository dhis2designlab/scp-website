{"version":3,"sources":["app/config.js","actions/actionTypes.js","actions/filters.js","helpers/packages.js","components/SearchField.js","components/Nav.js","components/Loader.js","components/GithubCard.js","components/VerificationMarker.js","components/ComponentCard.js","components/ComponentGrid.js","components/ComponentList.js","components/VersionFilter.js","components/FilterGroup.js","pages/Explore.js","pages/Information.js","pages/Contact.js","actions/npms.js","helpers/csv.js","app/App.js","actions/github.js","reducers/query.js","reducers/packages.js","reducers/filters.js","reducers/components.js","app/rootReducer.js","app/store.js","index.js"],"names":["module","exports","npms","baseUrl","unpkg","npmRegistry","packages","query","filter","setDisplayOffset","setSearchTerm","setFilters","setDhis2Versions","components","searchComponents","dispatch","getState","filters","all","filteredList","applyFilters","searchedList","search","searchTerm","type","payload","setFilterAndSearch","displayOffset","list","framework","dhis2Versions","component","language","onlyVerified","trueIfVerified","length","i","indexOf","versionArray","pack","currPackages","packageIndex","verified","package","name","findVerified","newestVersion","sort","semver","rcompare","index","packageFromIndex","version","inputValue","map","comp","item","result","Fuse","includeScore","threshold","keys","SearchField","props","useDispatch","useState","setInputValue","onSearch","e","input","preventDefault","navigateTo","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","onChange","target","onKeyDown","key","navBarBackground","transparent","backgroundColor","dark","Nav","location","useLocation","history","useHistory","onLanding","pathname","Navbar","collapseOnSelect","expand","variant","style","Brand","as","Link","to","id","alt","src","process","className","searchButtonText","push","Toggle","aria-controls","Collapse","Item","loaderStyle","box","width","height","justifyContent","display","alignItems","Loader","useEffect","window","document","body","classList","remove","Spinner","animation","role","githubCardStyle","link","color","GithubCard","isLoaded","username","error","size","avatarSize","status","state","setState","isCancelled","a","fetch","response","json","oldState","message","href","html_url","rel","icon","faUserAlt","data-tip","login","avatar_url","versionStyle","fontSize","paddingBottom","verifiedStyle","nonVerifiedStyle","VerificationMarker","verifiedVersion","p","faCircle","publisherStyle","margin","fontWeight","marginLeft","packageHeaderStyle","links","componentBoxStyle","boxShadow","position","minHeight","componentStyle","dataStyle","componentTitleStyle","padding","paddingTop","textAlign","descriptionStyle","marginTop","keywordsStyle","npmStyle","opacity","packageInfoStyle","bottom","paddingLeft","nonverified","ulStyle","listStyleType","overflow","liStyle","borderRadius","float","ComponentCard","useSelector","verifiedPackages","npm","description","keywords","publishedStyle","publisher","Date","date","moment","startOf","fromNow","faNpm","export","ComponentGrid","ComponentList","searchedComponents","searched","paginatedPackages","slice","pageCount","Math","ceil","previousLabel","faAngleDoubleLeft","nextLabel","faAngleDoubleRight","onPageChange","data","selected","offset","breakClassName","containerClassName","subContainerClassName","activeClassName","componentNumberStyle","right","CustomMenu","React","forwardRef","ref","children","labeledBy","setValue","aria-labelledby","autoFocus","Children","toArray","child","toLowerCase","startsWith","CheckElement","handleDhis2Version","compWithVersion","FormCheck","inline","checked","Input","Label","cursor","VersionFilter","allDhis2Versions","dhis2VersionsById","Dropdown","Menu","FilterGroup","handleFramework","newFramework","DropdownButton","title","onClick","newVersions","splice","label","event","packageListStyle","borderBottom","Search","Information","section","handleSelect","Prism","highlightAll","cliInfo","marginBottom","websiteInfo","informationStyle","img","Contact","queryBuilder","mod","join","getPackageJSON","axios","get","csvToJSON","csv","lines","split","headers","obj","currentline","j","App","client","github","ghrepo","repo","contentsAsync","content","binary","atob","modifiers","searchString","params","text","promiseArray","objects","packageData","Promise","catch","console","log","unpkgResults","packageJSON","componentList","packJsonComps","dhis2ComponentSearch","dhis2Version","k","versionObject","exact","path","Explore","initialMods","queryReducer","combineReducers","action","packagesReducer","arr","Array","total","verifiedObj","v","package_identifer","package_version","totalPackages","initialState","filterReducer","rootReducer","componentReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f99510eb.chunk.js","sourcesContent":["const config = {\r\n    npms: {\r\n        baseUrl: 'https://api.npms.io/v2/search?size=50'\r\n    },\r\n    unpkg: {\r\n        baseUrl: 'https://unpkg.com'\r\n    },\r\n    npmRegistry: {\r\n        baseUrl: 'https://registry.npmjs.com/-/v1/search'\r\n    }\r\n}\r\n\r\nmodule.exports = config","// This file will include the action types to be dispatched in domain/eventName.\r\n// E.g todos/addTodo, packages/fetchPackages\r\n\r\nexport const packages = {\r\n    fetchPackages: 'packages/fetchPackages',\r\n    fetchVerifiedList: 'packages/fetchVerifiedList',\r\n    createDhis2VersionArray: 'packages/createDhis2VersionArray',\r\n}\r\n\r\n//change to query/*\r\nexport const query = {\r\n    setModifiers: 'query/setModifiers',\r\n    setOffset: 'query/setOffset',\r\n}\r\n\r\nexport const filter = {\r\n    setDisplayOffset: 'filter/setOffset',\r\n    setSearchTerm: 'query/setSearchTerm',\r\n    setFilters: 'filter/setFilters',\r\n    setDhis2Versions: 'filter/setDhis2Versions',\r\n}\r\n\r\nexport const components = {\r\n    createList: 'components/createList',\r\n    searchList: 'components/searchList' ,\r\n}","import { filter, components } from './actionTypes'\r\nimport Fuse from 'fuse.js'\r\nimport semver from 'semver'\r\nimport { findVerified, packageFromIndex } from '../helpers/packages'\r\n\r\nexport const searchComponents = () => (dispatch, getState) => {\r\n    const filters = getState().filter\r\n    const packages = getState().packages\r\n    const { all } = getState().components\r\n\r\n    const filteredList = applyFilters(all, filters, packages)\r\n    const searchedList = search(filteredList, filters.searchTerm)\r\n\r\n    dispatch({type: components.searchList, payload: searchedList})\r\n}\r\n\r\nexport const setFilterAndSearch = (filters) => (dispatch, getState) => {\r\n    dispatch({type: filter.setFilters, payload: filters})\r\n    dispatch(searchComponents())\r\n}\r\n\r\nexport const setDhis2VersionAndSearch = (filters) => (dispatch, getState) => {\r\n    dispatch({type: filter.setFilters, payload: filters})\r\n    dispatch(searchComponents())\r\n}\r\n\r\nexport const setSearchTerm = (input) => (dispatch) => {\r\n    dispatch({type: filter.setSearchTerm, payload: input})\r\n}\r\n\r\nexport const setDisplayOffset = (displayOffset) => (dispatch) => {\r\n    dispatch({type: filter.setDisplayOffset, payload: displayOffset})\r\n}\r\n\r\n/**\r\n * \r\n * @param {array} list List to apply filters to\r\n * @param {object} filters The filters\r\n * @param {object} packages Top level object in redux store\r\n */\r\nconst applyFilters = (list, filters, packages) => {\r\n    const { framework, dhis2Versions } = filters\r\n    return list.filter(component => {\r\n        // Filter on framework\r\n        if(framework !== 'all'){\r\n            if(component.language !== framework) return false\r\n        }\r\n\r\n        // Filter on verified\r\n        if(filters.onlyVerified && !trueIfVerified(component, packages)) return false\r\n\r\n        // Filter on dhis2 version\r\n        if(dhis2Versions.length !== 0){\r\n            for(let i = 0; i < dhis2Versions.length; i++){\r\n                const index = component.dhis2Versions.indexOf(dhis2Versions[i])\r\n                if(index === -1) return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} component Item from components.all in redux store\r\n * @param {object} packages Top level object in redux store\r\n * @returns true if current package version is verified, false if not\r\n */\r\nconst trueIfVerified = (component, packages) => {\r\n    const versionArray = findVerified(component, packages)\r\n    if(!versionArray) return false\r\n    const newestVersion = versionArray.sort(semver.rcompare)[0]\r\n    const packageVersion = packageFromIndex(packages.currPackages, component.packageIndex).package.version\r\n    if(packageVersion === newestVersion) return true\r\n    else return false\r\n}\r\n\r\n/**\r\n * Searches an array using Fusejs\r\n * @param {array} list List to search on\r\n * @param {string} inputValue String to search with\r\n * @returns a result array with items matched\r\n */\r\nconst search = (list, inputValue) => {\r\n    if(list.length === 0) return []\r\n    if(inputValue.length === 0) return list.map(comp => ({item: comp}))\r\n\r\n    const options = {\r\n        includeScore: true,\r\n        threshold: 0.4,\r\n        keys: ['name']\r\n    }\r\n    const fuse = new Fuse(list, options)\r\n\r\n    const result = fuse.search(inputValue)\r\n    if(result === 0) return []\r\n    return result\r\n}","/**\r\n * Finds the verified array for a component\r\n * @param {object} component Item from components.all in redux store\r\n * @param {object} packages Top level object in redux store\r\n * @returns versionArray if found, otherwise null\r\n */\r\nexport const findVerified = (component, packages) => {\r\n    const pack = packages.currPackages[component.packageIndex]\r\n    if(!pack) return null\r\n    const versionArray = packages.verified[pack.package.name]\r\n    if(!versionArray) return null\r\n    return versionArray\r\n}\r\n\r\n/**\r\n * Finds a package from its index\r\n * @param {object} packages Top level object in redux store\r\n * @param {index} index A component's packageIndex\r\n * @returns {object} The package\r\n */\r\nexport const packageFromIndex = (packages, index) => {\r\n    return packages[index]\r\n}","import React, { useState } from 'react'\r\nimport 'purecss/build/pure.css'\r\nimport { InputGroup, FormControl } from 'react-bootstrap'\r\nimport '../stylesheets/search-field.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { searchComponents, setSearchTerm, setDisplayOffset } from '../actions/filters'\r\n\r\nconst SearchField = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const onSearch = (e) => {\r\n        e.preventDefault()\r\n        dispatch(setDisplayOffset(0))\r\n        dispatch(setSearchTerm(inputValue))\r\n        dispatch(searchComponents())\r\n        if(props.navigateTo) props.navigateTo()\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onSearch(e);\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n\r\n        <InputGroup>\r\n            <FormControl\r\n                placeholder=\"Search for components\"\r\n                aria-label=\"Search for components\"\r\n                aria-describedby=\"basic-addon2\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n            />\r\n        </InputGroup>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchField","import React from 'react'\r\nimport {\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'purecss/build/pure.css'\r\nimport '../stylesheets/navigation.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Navbar, Nav as Navigation } from 'react-bootstrap'\r\nimport SearchField from './SearchField'\r\n\r\nconst navBarBackground = {\r\n  transparent: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  dark: {\r\n    backgroundColor: '#343a40',\r\n  }\r\n}\r\n\r\n\r\nconst Nav = (props) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const onLanding = location.pathname === '/';\r\n\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" style={onLanding ? navBarBackground.transparent : navBarBackground.dark}>\r\n        <Navbar.Brand as={Link} to=\"/scp-website\"><img id=\"logo\" alt=\"DHIS2 logo\" src={process.env.PUBLIC_URL + '/img/dhis2-logo.png'} /></Navbar.Brand>\r\n        <div className=\"order-lg-second w-50\" >\r\n          <SearchField searchButtonText=\"Search\" navigateTo={() => history.push(\"/scp-website/\")} />\r\n        </div>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\" >\r\n          <Navigation className=\"container-fluid justify-content-end\">\r\n            <Navigation.Item>\r\n              <Navigation.Link as={Link} to=\"/scp-website/information\">Information</Navigation.Link>\r\n            </Navigation.Item>\r\n            <Navigation.Item>\r\n              <Navigation.Link as={Link} to=\"/scp-website/contact\">Contact us</Navigation.Link>\r\n            </Navigation.Item>\r\n          </Navigation>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nav","import React, { useEffect } from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst loaderStyle = {\r\n    box: {\r\n        width: '100%',\r\n        height: 'calc(90vh - 80px)',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}\r\n\r\nconst Loader = () => {\r\n    useEffect(() => {\r\n        if(window.location.pathname === '/scp-website') document.body.className = 'landing';\r\n        return () => {\r\n            document.body.classList.remove('landing');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div style={ loaderStyle.box }>\r\n            <Spinner animation=\"border\" role=\"status\" >\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useEffect, useState } from 'react'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport 'purecss/build/pure.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst githubCardStyle = {\r\n    link: {\r\n        color: 'inherit',\r\n    }\r\n}\r\n\r\nconst GithubCard = (props) => {\r\n    const [state, setState] = useState({\r\n        isLoaded: false,\r\n        item: null,\r\n        username: props.username,\r\n        error: null,\r\n        size: props.avatarSize,\r\n        status: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n        (async () => {\r\n            let result;\r\n            try {\r\n                const response = await fetch(`https://api.github.com/users/${state.username}`);\r\n\r\n                result = await response.json();\r\n                !isCancelled && setState((oldState) => ({\r\n                    ...oldState,\r\n                    isLoaded: true,\r\n                    status: response.status,\r\n                    item: result,\r\n                }));\r\n            } catch (error) {\r\n                !isCancelled && setState((oldState) => ({\r\n                    ...oldState,\r\n                    isLoaded: true,\r\n                    error\r\n                }));\r\n            }\r\n        })();\r\n        return () => {\r\n            isCancelled = true;\r\n        };\r\n    }, [state.username]);\r\n\r\n    const { error, isLoaded, item, size, status } = state;\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <>\r\n                <a href={item.html_url} target=\"_blank\" rel=\"noopener noreferrer\" style={githubCardStyle.link}>\r\n                    {(status === 404 || status === 403) ? <FontAwesomeIcon icon={faUserAlt} />\r\n                        : <img data-tip={item.login} alt=\"github avatar\" style={size} src={item.avatar_url} />}\r\n                </a>\r\n                <ReactTooltip />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GithubCard;","import React from 'react'\r\nimport '../stylesheets/verification-marker.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst versionStyle = {\r\n    fontSize: '16px',\r\n    paddingBottom: 0\r\n}\r\n\r\nconst verifiedStyle = {\r\n    color: 'green'\r\n}\r\n\r\nconst nonVerifiedStyle = {\r\n    color: 'gray'\r\n}\r\n\r\nconst VerificationMarker = (props) => {\r\n\r\n    const { verifiedVersion, p } = props;\r\n\r\n    //TODO account for several verified packages\r\n    //check if package is verified\r\n    if (verifiedVersion) {\r\n        //Atleast one version of the package is verified\r\n        if (verifiedVersion === p.version) {\r\n            //The current version is verified\r\n            return (\r\n                <div>\r\n                    <p className=\"version\" style={versionStyle}><FontAwesomeIcon style={verifiedStyle} icon={faCircle} className=\"fa-xs\" /> {verifiedVersion}</p>\r\n                </div>\r\n            )\r\n        } else if (verifiedVersion < p.version) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <p className=\"version\" style={versionStyle}><FontAwesomeIcon style={nonVerifiedStyle} icon={faCircle} className=\"fa-xs\" /> {p.version}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"version\" style={versionStyle}><FontAwesomeIcon style={verifiedStyle} icon={faCircle} className=\"fa-xs\" /> {verifiedVersion}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <p className=\"version\" style={versionStyle}><FontAwesomeIcon style={verifiedStyle} icon={faCircle} className=\"fa-xs\" /> {verifiedVersion}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"version\" style={versionStyle}><FontAwesomeIcon style={nonVerifiedStyle} icon={faCircle} className=\"fa-xs\" /> {p.version}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        //Package is not verified\r\n        return (\r\n            <div>\r\n                <p className=\"version\" style={versionStyle}><span className=\"dot-grey\"></span> {p.version}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerificationMarker","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport GithubCard from './GithubCard'\r\nimport '../stylesheets/component.css'\r\nimport moment from 'moment'\r\nimport { useSelector } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faNpm } from \"@fortawesome/free-brands-svg-icons\"\r\nimport ReactTooltip from 'react-tooltip'\r\nimport VerificationMarker from './VerificationMarker'\r\n\r\nconst publisherStyle = {\r\n    margin: \"1em 0 0.5em 0\",\r\n}\r\n\r\nconst versionStyle = {\r\n    color: \"#7f7f7f\",\r\n    fontWeight: 300,\r\n    marginLeft: \"10px\",\r\n}\r\n\r\nconst packageHeaderStyle = {\r\n    margin: '0 10px 0 0',\r\n    links: {\r\n        margin: '0 10px 0 0px',\r\n        color: 'inherit',\r\n    }\r\n}\r\n\r\nconst componentBoxStyle = {\r\n    boxShadow: '-1px 0px 8px -4px rgba(46,46,46,0.67)',\r\n    backgroundColor: \"#FFF\",\r\n    position: 'relative',\r\n    minHeight: '280px',\r\n}\r\n\r\nconst componentStyle = {\r\n    dataStyle: {\r\n        margin: \"15px\",\r\n    },\r\n    componentTitleStyle: {\r\n        padding: \"5px\",\r\n        paddingTop: '15px'\r\n    },\r\n    versionStyle: {\r\n        padding: \"5px\",\r\n        paddingTop: '10px',\r\n        textAlign: \"right\",\r\n    },\r\n    descriptionStyle: {\r\n        padding: \"5px\",\r\n        marginTop: \"10px\"\r\n    },\r\n    keywordsStyle: {\r\n        padding: 0,\r\n        marginTop: \"10px\"\r\n    },\r\n    npmStyle: {\r\n        padding: \"10px\",\r\n        paddingTop: \"15px\",\r\n        textAlign: \"right\",\r\n        opacity: \"0.5\"\r\n    },\r\n    packageInfoStyle: {\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        backgroundColor: \"#eee\",\r\n        width: \"100%\",\r\n        margin: 0,\r\n        padding: \"5px\",\r\n        paddingLeft: \"15px\",\r\n        fontWeight: \"bold\",\r\n        color: \"#a1a1a1\"\r\n    },\r\n    verified: {\r\n        color: \"green\"\r\n    },\r\n    nonverified: {\r\n        color: \"gray\"\r\n    },\r\n    ulStyle: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n        overflow: 'hidden',\r\n    },\r\n    liStyle: {\r\n        margin: \"10px 10px 0 0\",\r\n        padding: \"5px\",\r\n        backgroundColor: \"#f2f2f2\",\r\n        borderRadius: \"4px\",\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst ComponentCard = props => {\r\n    const { p } = props;\r\n    const packages = useSelector(state => state.packages.currPackages);\r\n    const verifiedPackages = useSelector(state => state.packages.verified);\r\n\r\n    return (\r\n        <div className=\"grid-item\" id=\"grid-item\" style={componentBoxStyle}>\r\n            <div className=\"pure-g\" style={componentStyle.dataStyle}>\r\n                <div className=\"pure-u-4-5\" style={componentStyle.componentTitleStyle}><Link style={packageHeaderStyle} to={{ pathname: packages[p.item.packageIndex].package.links.npm }} target=\"_blank\"><h4 style={{ display: 'inline' }}>{p.item.name}</h4></Link></div>\r\n                <div className=\"pure-u-1-5\" style={componentStyle.versionStyle}>\r\n                    <VerificationMarker verifiedVersion={verifiedPackages[packages[p.item.packageIndex].package.name]} p={packages[p.item.packageIndex].package} />\r\n                </div>\r\n\r\n                <div className=\"pure-u-5-5 grid-item-content\" style={componentStyle.descriptionStyle}>\r\n                    <p>{p.item.description}</p>\r\n                </div>\r\n\r\n                <div className=\"pure-u-5-5\" style={componentStyle.keywordsStyle}>\r\n                    {packages[p.item.packageIndex].package.keywords ? <>\r\n                        <ul style={componentStyle.ulStyle}>\r\n                            {packages[p.item.packageIndex].package.keywords.map((i) => <li style={componentStyle.liStyle} key={i}><a href={`https://www.npmjs.com/search?q=keywords:${i}`}>{i}</a></li>)}\r\n                        </ul>\r\n                    </> : null}\r\n                </div>\r\n                <div className=\"pure-u-4-5 last-row\" style={componentStyle.publishedStyle}>\r\n                    <div style={publisherStyle}><GithubCard username={packages[p.item.packageIndex].package.publisher.username} avatarSize={{ width: '22px' }} /><span data-tip={new Date(packages[p.item.packageIndex].package.date)} style={versionStyle}>published {packages[p.item.packageIndex].package.version} &bull; {moment(packages[p.item.packageIndex].package.date).startOf('day').fromNow()}</span></div>\r\n                    <ReactTooltip />\r\n                </div>\r\n                <div className=\"pure-u-1-5 last-row\" style={componentStyle.npmStyle}><Link style={packageHeaderStyle.links} target=\"_blank\" to={{ pathname: packages[p.item.packageIndex].package.links.npm }}><FontAwesomeIcon icon={faNpm} className=\"fa-lg\" /></Link></div>\r\n            </div>\r\n            <div className=\"pure-g\">\r\n                <div className=\"pure-u-5-5\" style={componentStyle.packageInfoStyle}>\r\n                    {packages[p.item.packageIndex].package.name}/{p.item.export}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentCard","import React from 'react'\r\nimport 'purecss/build/pure.css';\r\nimport ComponentCard from './ComponentCard'\r\nimport '../stylesheets/component-grid.css'\r\n\r\nconst ComponentGrid = props => {\r\n    const {packages} = props\r\n\r\n    //TODO make sure that max 9 packages exist in the array. Do this in the pagination feature\r\n    return (\r\n        <div className=\"grid-wrapper pure-g\">\r\n            {packages.map((p, i) => \r\n                <div key={i} className=\"grid-item-wrapper pure-u-1 pure-u-lg-1-2 pure-u-xl-1-3\">\r\n                    <ComponentCard  className=\"grid-item l-box\" p={p} key={i}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentGrid","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setDisplayOffset } from '../actions/filters'\r\nimport ComponentGrid from './ComponentGrid'\r\nimport ReactPaginate from 'react-paginate'\r\nimport 'purecss/build/pure.css'\r\nimport '../stylesheets/paginate.css'\r\nimport '../stylesheets/package-list.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst ComponentList = () => {\r\n    const dispatch = useDispatch()\r\n    const searchedComponents = useSelector(state => state.components.searched);\r\n    const displayOffset = useSelector(state => state.filter.displayOffset)\r\n    const componentsPerPage = 5;\r\n\r\n    if (searchedComponents.length === 0) return (<p>No hits</p>)\r\n\r\n    const paginatedPackages = searchedComponents.slice(displayOffset, displayOffset + componentsPerPage)\r\n\r\n    const handlePageClick = (data) => {\r\n        let selected = data.selected;\r\n        let offset = Math.ceil(selected * componentsPerPage);\r\n        dispatch(setDisplayOffset(offset))\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <p>Showing {searchedComponents.length} components</p>\r\n            <ComponentGrid className=\"grid-element\" packages={paginatedPackages} />\r\n            <div id=\"react-paginate\" className=\"center\"><ReactPaginate\r\n                pageCount={Math.ceil(searchedComponents.length / componentsPerPage)}\r\n                previousLabel={<FontAwesomeIcon icon={faAngleDoubleLeft} />}\r\n                nextLabel={<FontAwesomeIcon icon={faAngleDoubleRight} />}\r\n                onPageChange={handlePageClick}\r\n                breakClassName={'break-me'}\r\n                containerClassName={'pagination'}\r\n                subContainerClassName={'pages pagination'}\r\n                activeClassName={'active'} /></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComponentList","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport FormCheck from 'react-bootstrap/FormCheck'\r\nimport semver from 'semver'\r\nimport '../stylesheets/version-filter.css'\r\n\r\nconst versionStyle = {\r\n    position:\"relative\"\r\n}\r\n\r\nconst componentNumberStyle = {\r\n    position:\"absolute\",\r\n    right:\"15px\",\r\n    opacity: \"0.5\"\r\n}\r\n\r\n// from https://react-bootstrap.github.io/components/dropdowns/\r\nconst CustomMenu = React.forwardRef(\r\n({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n    <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n    >\r\n        <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n        />\r\n        <ul className=\"list-unstyled menuScroll\" >\r\n        {React.Children.toArray(children).filter(\r\n            (child) =>\r\n            !value || child.props.version.toLowerCase().startsWith(value),\r\n        )}\r\n        </ul>\r\n    </div>\r\n    );\r\n},\r\n);\r\n\r\nconst CheckElement = React.forwardRef(\r\n    ({ className, version, handleDhis2Version, dhis2Versions, compWithVersion }, ref) => {\r\n        return (\r\n            <FormCheck \r\n                ref={ref}\r\n                id={`check-${version}`}\r\n                inline={true} \r\n                className={className}\r\n                type=\"checkbox\"\r\n                checked={dhis2Versions.indexOf(version) !== -1}\r\n            >\r\n                <FormCheck.Input\r\n                    type=\"checkbox\"\r\n                    onChange={() => handleDhis2Version(version)}\r\n\r\n                />\r\n                <FormCheck.Label style={{width: '100%', cursor: 'pointer'}}>\r\n                    <div style={versionStyle}>{version} <span style={componentNumberStyle}>({compWithVersion})</span></div>\r\n                </FormCheck.Label>\r\n            </FormCheck>\r\n        );\r\n    },\r\n);\r\n\r\nconst VersionFilter = ({allDhis2Versions, dhis2Versions, handleDhis2Version, dhis2VersionsById}) => {\r\n    return(\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n                DHIS2 Version\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu as={CustomMenu}>\r\n                {allDhis2Versions.sort(semver.rcompare).map(item => (\r\n                    <Dropdown.Item \r\n                        as={CheckElement} \r\n                        version={item} key={item} \r\n                        handleDhis2Version={handleDhis2Version} \r\n                        dhis2Versions={dhis2Versions}\r\n                        compWithVersion={dhis2VersionsById[item]}\r\n                    />\r\n                ))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nexport default VersionFilter","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport FormCheck from 'react-bootstrap/FormCheck'\r\nimport { setFilterAndSearch } from '../actions/filters'\r\nimport VersionFilter from './VersionFilter'\r\nimport '../stylesheets/filter.css'\r\n\r\nconst FilterGroup = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { framework, onlyVerified, dhis2Versions } = useSelector(state => state.filter)\r\n    const { allDhis2Versions, dhis2VersionsById } = useSelector(state => state.packages)\r\n\r\n    const handleFramework = (newFramework) => {\r\n        dispatch(setFilterAndSearch({ framework: newFramework }))\r\n    }\r\n\r\n    const handleVerified = (event) => {\r\n        dispatch(setFilterAndSearch({ onlyVerified: event.target.checked }))\r\n    }\r\n\r\n    const handleDhis2Version = (version) => {\r\n        const newVersions = [...dhis2Versions]\r\n        const indexOf = dhis2Versions.indexOf(version)\r\n        if (indexOf === -1) newVersions.push(version)\r\n        else newVersions.splice(indexOf, 1)\r\n        dispatch(setFilterAndSearch({ dhis2Versions: newVersions }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"pure-g\">\r\n            <div className=\"pure-u-1-1 pure-u-md-4-5\"><div className=\"drop-down\"><DropdownButton id=\"dropdown-basic-button\" title={`Framework: ${framework}`} className=\"mr-1 drop-down\">\r\n                <Dropdown.Item onClick={() => handleFramework('all')}>All</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleFramework('react')}>React</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleFramework('angular')}>Angular</Dropdown.Item>\r\n            </DropdownButton></div><VersionFilter className=\"filter-item\" allDhis2Versions={allDhis2Versions} dhis2Versions={dhis2Versions} handleDhis2Version={handleDhis2Version} dhis2VersionsById={dhis2VersionsById} /></div>\r\n            <div className=\" pure-u-1 pure-u-md-1-5 form-check\"><FormCheck\r\n                id=\"verified-check\"\r\n                label=\"Show only verified components\"\r\n                inline={true}\r\n                className=\"ml-auto\"\r\n                type=\"checkbox\"\r\n                checked={onlyVerified}\r\n                onChange={handleVerified}\r\n            /></div>\r\n        </div>\r\n\r\n        /**\r\n         * return (\r\n        <div className=\"d-flex flex-row\">\r\n            <DropdownButton id=\"dropdown-basic-button\" title={`Framework: ${framework}`} className=\"mr-1\">\r\n                <Dropdown.Item onClick={() => handleFramework('all')}>All</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleFramework('react')}>React</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleFramework('angular')}>Angular</Dropdown.Item>\r\n            </DropdownButton>\r\n            <VersionFilter allDhis2Versions={allDhis2Versions} dhis2Versions={dhis2Versions} handleDhis2Version={handleDhis2Version} dhis2VersionsById={dhis2VersionsById} />\r\n            <FormCheck \r\n                id=\"verified-check\" \r\n                label=\"Show only verified components\" \r\n                inline={true} \r\n                className=\"ml-auto\"\r\n                type=\"checkbox\"\r\n                checked={onlyVerified}\r\n                onChange={handleVerified}\r\n            />\r\n        </div>\r\n    )\r\n         */\r\n    )\r\n}\r\n\r\nexport default FilterGroup","import React from 'react';\r\nimport 'purecss/build/pure.css';\r\nimport '../stylesheets/main.css';\r\nimport '../stylesheets/search.css'\r\nimport ComponentList from '../components/ComponentList'\r\nimport FilterGroup from '../components/FilterGroup'\r\n\r\nconst packageListStyle = {\r\n  item: {\r\n    height: '100%',\r\n    minHeight: '180px',\r\n    borderBottom: '1px solid #f2f2f2'\r\n  },\r\n  description: {\r\n    color: 'gray',\r\n  }\r\n}\r\n\r\nconst Search = () => {\r\n  return (\r\n    <>\r\n      <div className=\"pure-g content\">\r\n        <div className=\"pure-u-1\">\r\n          <div className=\"l-box\">\r\n            <FilterGroup />\r\n          </div>\r\n        </div>\r\n        <div className=\"pure-u-1\">\r\n          <div className=\"l-box\">\r\n            <ComponentList style={packageListStyle} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'purecss/build/pure.css'\r\nimport Prism from 'prismjs'\r\n\r\n\r\n\r\nconst Information = () => {\r\n    const [state, setState] = useState({ section: \"website-info\" });\r\n\r\n    const handleSelect = (event, section) => {\r\n        event.preventDefault();\r\n        setState({...state, section})\r\n    }\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    })\r\n\r\n    const cliInfo = <>\r\n        <h3 style={{marginBottom:'25px'}}>DHIS2 SCP Command Line Interface (CLI)</h3>\r\n        <p>\r\n            The DHIS2 SCP provides a command line interface for verifying components.\r\n            This command line interface gives developers of components a means to determine\r\n            if their packages comply to the standards set by the DHIS2 core team.\r\n        </p>\r\n        <p>\r\n            The CLI provides a command, <code className=\"language-bash\">dhsi2-scp-cli verify</code>,\r\n            that performs the same verification that will be performed as a preqrequisite for component\r\n            merge requests.\r\n        </p>\r\n        <p>Currently the verify command will perform the following checks:</p>\r\n        <ul>\r\n            <li>Verify that the correct keyword is specified in <code>package.json</code>.</li>\r\n            <li>Verify that linting completes without error.</li>\r\n        </ul>\r\n        <p>\r\n            <a href=\"https://github.com/haheskja/scp-boilerplate\" rel=\"noopener noreferrer\" target=\"_blank\">The git repository for the CLI</a>\r\n        </p>\r\n    </>\r\n\r\n    const websiteInfo = <>\r\n        <h3 style={{marginBottom:'25px'}}>DHIS2 Component Search</h3>\r\n        <p>\r\n            The DHIS2 Component Search is a website to search for components created by the HISP community.\r\n        </p>\r\n        <p>\r\n            There are currently three \"types\" of searches:\r\n        </p>\r\n        <ul>\r\n            <li>All. This searches the entire npm registry.</li>\r\n            <li>Unverified. This searches the entire npm registry within one particular keyword, e.g. <code>dhis2</code> or <code>dhis2-ui</code></li>\r\n            <li>Verified. Almost the same as unverified, these are components given a \"seal of approval\" from the core team</li>\r\n        </ul>\r\n        <p>\r\n            <a href=\"https://github.com/haheskja/scp-website\" rel=\"noopener noreferrer\" target=\"_blank\">The git repository for Component Search</a>\r\n        </p>\r\n    </>\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pure-g content\">\r\n                <div className=\"pure-u-1-1 pure-u-md-1-1\">\r\n                    <div className=\"l-box\">\r\n                        <h1>Information</h1>\r\n                        <div className=\"pure-g\">\r\n                            <div className=\"pure-u-1-5\">\r\n                                <div className=\"website-info\">\r\n                                    <a href=\"/#\" onClick={(event) => { handleSelect(event,\"website-info\") }}>\r\n                                        Component search\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"cli-info\">\r\n                                    <a href=\"/#\" onClick={(event) => { handleSelect(event,\"cli-info\") }}>\r\n                                        CLI\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"pure-u-4-5\">\r\n                                { (state.section === \"website-info\") ? websiteInfo : null }\r\n                                { (state.section === \"cli-info\") ? cliInfo : null }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Information;","import React from 'react';\r\nimport 'purecss/build/pure.css'\r\n\r\nconst informationStyle = {\r\n    padding: '15px 15px 15px 0',\r\n    img: {\r\n        width: '100px',\r\n        marginLeft: '25px'\r\n    },\r\n    title: {\r\n        margin: '15px 0 15px 0'\r\n    }\r\n}\r\n\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <>\r\n            <div className=\"pure-g content\">\r\n                <div className=\"pure-u-1-1 pure-u-md-1-1\">\r\n                    <div className=\"l-box\">\r\n                        <p>This project is part of the larger research project the DHIS2 Design Lab within HISP UiO.</p>\r\n                        <div className=\"pure-g design-lab\" style={informationStyle}>\r\n                            <div className=\"pure-u-1\" style={informationStyle.title}><h3>DHIS2 Design Lab</h3></div>\r\n                            <div className=\"pure-u-3-5 pure-u-md-4-5 pure-u-lg-4-5\">\r\n                                <p>The DHIS2 Design Lab explores how we within the DHIS2 software ecosystem can\r\n                                facilitate and promote the design and innovation of tools that are usable\r\n                                and provide value to the work of end-users. The knowledge generated through\r\n                                our work is also relevant to research on design and innovation within generic\r\n                                       enterprise software ecosystems more generally.</p>\r\n                                <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.mn.uio.no/ifi/english/research/networks/hisp/dhis2-design-lab/\">Read more..</a></p>\r\n                            </div>\r\n                            <div className=\"pure-u-2-5 pure-u-md-1-5 pure-u-lg-1-5\">\r\n                                <img alt=\"dhis2 design lab\" style={informationStyle.img} src={process.env.PUBLIC_URL + '/img/dhis2-design-lab-logo.png'} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pure-g hisp\" style={informationStyle}>\r\n                            <div className=\"pure-u-1\" style={informationStyle.title}> <h3>Health Information Systems Programme (HISP)</h3></div>\r\n                            <div className=\"pure-u-4-5\">\r\n                                <p>HISP is a global movement to strengthen Health Information Systems in Developing\r\n                                countries that started in South Africa in the 1990s. HISP at UiO is one of the\r\n                                leading organisations in this movement and our contribution includes in-country\r\n                                capacity building and implementation support, research, a PhD program, and hosting\r\n                                        the core DHIS2 software development team.</p>\r\n                                <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.mn.uio.no/ifi/english/research/networks/hisp/management-team.html\">Read more..</a></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contact;","import axios from 'axios'\r\nimport { packages, query, filter, components } from './actionTypes'\r\nimport { npmRegistry, unpkg } from '../app/config'\r\nimport { searchComponents } from './filters'\r\n\r\n/**\r\n * Simple method for fetching a set of packages from npms and then dispatching them to get stored in the Redux store.\r\n */\r\nexport const getPackages = () => async (dispatch, getState) => {\r\n    const { modifiers, offset } = getState().query\r\n\r\n    const searchString = queryBuilder(modifiers)\r\n\r\n    const response = await axios.get(npmRegistry.baseUrl, { \r\n        params: { \r\n            text: searchString,\r\n        },\r\n    })\r\n\r\n    const promiseArray = []\r\n\r\n    for(let i = 0; i < response.data.objects.length; i++){\r\n        const packageData = response.data.objects[i]\r\n        promiseArray.push(getPackageJSON(`${packageData.package.name}@${packageData.package.version}/package.json`))\r\n    }\r\n\r\n    const unpkgResults = await Promise.all(promiseArray).catch(e => console.log(e))\r\n\r\n    for(let i = 0; i < unpkgResults.length; i++){\r\n        response.data.objects[i].packageJSON = {\r\n            ...unpkgResults[i],\r\n        }\r\n    }\r\n\r\n    const componentList = []\r\n    const allDhis2Versions = []\r\n    const dhis2VersionsById = {}\r\n\r\n    for(let i = 0; i < response.data.objects.length; i++){\r\n        const pack = response.data.objects[i]\r\n        const packJsonComps = pack.packageJSON.dhis2ComponentSearch.components\r\n        for(let j = 0; j < packJsonComps.length; j++){\r\n            const comp = {\r\n                name: packJsonComps[j].name,\r\n                export: packJsonComps[j].export,\r\n                description: packJsonComps[j].description,\r\n                language: pack.packageJSON.dhis2ComponentSearch.language,\r\n                dhis2Versions: packJsonComps[j].dhis2Version,\r\n                packageIndex: i\r\n            }\r\n            componentList.push(comp)\r\n            if(comp.dhis2Versions){\r\n                for(let k = 0; k < comp.dhis2Versions.length; k++){\r\n                    if(allDhis2Versions.indexOf(comp.dhis2Versions[k]) === -1) {\r\n                        allDhis2Versions.push(comp.dhis2Versions[k])\r\n                        dhis2VersionsById[comp.dhis2Versions[k]] = 1\r\n                    }\r\n                    else {\r\n                        dhis2VersionsById[comp.dhis2Versions[k]] += 1\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    dispatch({ type: packages.createDhis2VersionArray, payload: { versionArray: allDhis2Versions, versionObject: dhis2VersionsById}})\r\n    dispatch({ type: components.createList, payload: componentList})\r\n    dispatch({ type: packages.fetchPackages, payload: {data: response.data, offset: offset}})\r\n    dispatch(searchComponents())\r\n}\r\n\r\nexport const setModifiers = (mods) => (dispatch) => {\r\n    dispatch({type: query.setModifiers, payload: mods})\r\n}\r\n\r\nexport const setOffset = (offset) => (dispatch) => {\r\n    dispatch({type: query.setOffset, payload: offset})\r\n}\r\n\r\nexport const setVerified = (verified) => (dispatch) => {\r\n    dispatch({type: filter.setVerified, payload: verified})\r\n}\r\n\r\nconst queryBuilder = (mod) => {\r\n    var query = ''\r\n    if (mod.length > 0) {\r\n        var appendix = mod.join('+')\r\n        query += appendix\r\n    }\r\n    return query\r\n}\r\n\r\nconst getPackageJSON = async (input) => {\r\n    const response = await axios.get(`${unpkg.baseUrl}/${input}`)\r\n    return response.data\r\n}","/**\r\n * Convert from csv string to json\r\n * @param {csvString} csv \r\n */\r\nexport const csvToJSON = (csv) => {\r\n\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for(var i = 1; i < lines.length; i++){\r\n\r\n        var obj = {};\r\n        var currentline = lines[i].split(\",\");\r\n\r\n        for(var j = 0; j < headers.length; j++){\r\n            obj[headers[j]] = currentline[j];\r\n        }\r\n\r\n        result.push(obj);\r\n\r\n    }\r\n\r\n    return result;\r\n}","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Nav from '../components/Nav'\r\nimport Loader from '../components/Loader'\r\nimport Explore from '../pages/Explore'\r\nimport Information from '../pages/Information'\r\nimport Contact from '../pages/Contact'\r\nimport '../stylesheets/grids-responsive-min.css'\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\nimport { getPackages } from '../actions/npms'\r\nimport { fetchVerified } from '../actions/github'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const searched = useSelector(state => state.packages.searched)\r\n\r\n  useEffect(() => {\r\n    if(searched === false){\r\n      dispatch(fetchVerified())\r\n      dispatch(getPackages())\r\n    }\r\n    \r\n  }, [searched, dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <Nav/>\r\n      {searched ? (\r\n        <Switch>\r\n          <Route exact path='/scp-website' component={Explore}/>\r\n          <Route path='/scp-website/information' component={Information}/>\r\n          <Route path='/scp-website/contact' component={Contact}/>\r\n        </Switch>\r\n      ) : (\r\n      <Loader />\r\n    )}\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import github from 'octonode'\r\nimport atob from 'atob'\r\nimport { packages } from './actionTypes'\r\nimport { csvToJSON } from '../helpers/csv'\r\n\r\nexport const fetchVerified = () => async (dispatch, getState) => {\r\n    const client = github.client()\r\n    const ghrepo = client.repo('dhis2-scp/whitelist')\r\n\r\n    const result = await ghrepo.contentsAsync('list.csv');\r\n\r\n    // Actual content base64 encoded\r\n    const content = result[0].content\r\n\r\n    // Convert from base64 to binary\r\n    const binary = atob(content)\r\n\r\n    // Convert from binary/csv to JSON\r\n    const json = csvToJSON(binary)\r\n\r\n    dispatch({ type: packages.fetchVerifiedList, payload: json })\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { query } from '../actions/actionTypes'\r\n\r\n// const initialMods = ['keywords:dhis2-component-search']\r\nconst initialMods = ['keywords:dhis2-component-search']\r\n\r\nconst modifiers = (state = initialMods, action) => {\r\n    switch (action.type) {\r\n      case query.setModifiers:\r\n        return [\r\n            ...action.payload\r\n        ]\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nconst offset = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case query.setOffset:\r\n      return action.payload\r\n    default:\r\n      return state \r\n  }\r\n}\r\n\r\nconst queryReducer = combineReducers({\r\n    modifiers,\r\n    offset\r\n})\r\n  \r\nexport default queryReducer","import { combineReducers } from 'redux'\r\nimport { packages } from '../actions/actionTypes'\r\n\r\nconst currPackages = (state = [], action) => {\r\n  switch (action.type) {\r\n    case packages.fetchPackages:\r\n      var arr = [...state];\r\n      if (action.payload.offset === 0) {\r\n        arr = new Array(action.payload.data.total);\r\n      }\r\n      arr.splice(action.payload.offset, action.payload.data.objects.length, ...action.payload.data.objects)\r\n      return arr\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst verified = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case packages.fetchVerifiedList:\r\n      const verifiedObj = {}\r\n      for(let i = 0; i < action.payload.length; i++){\r\n        const v = action.payload[i]\r\n        if(!verifiedObj[v.package_identifer]) verifiedObj[v.package_identifer] = []\r\n        verifiedObj[v.package_identifer] = [ ...verifiedObj[v.package_identifer], v.package_version]\r\n      }\r\n      return verifiedObj\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst totalPackages = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case packages.fetchPackages:\r\n      return action.payload.data.total\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst searched = (state = false, action) => {\r\n  switch (action.type) {\r\n    case packages.fetchPackages:\r\n      return true\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allDhis2Versions = (state = [], action) => {\r\n  switch (action.type) {\r\n    case packages.createDhis2VersionArray:\r\n      return action.payload.versionArray\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst dhis2VersionsById = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case packages.createDhis2VersionArray:\r\n      return action.payload.versionObject\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst packagesReducer = combineReducers({\r\n    currPackages,\r\n    verified,\r\n    totalPackages,\r\n    searched,\r\n    allDhis2Versions,\r\n    dhis2VersionsById\r\n})\r\n\r\nexport default packagesReducer","import { filter } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    displayOffset: 0,\r\n    searchTerm: '',\r\n    framework: 'all',\r\n    onlyVerified: false,\r\n    dhis2Versions: []\r\n}\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case filter.setFilters:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case filter.setDisplayOffset:\r\n            return {\r\n                ...state,\r\n                displayOffset: action.payload\r\n            }\r\n        case filter.setSearchTerm:\r\n            return {\r\n                ...state,\r\n                searchTerm: action.payload\r\n            }\r\n        case filter.setDhis2Versions:\r\n            return {\r\n                ...state,\r\n                dhis2Versions: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default filterReducer","import { combineReducers } from 'redux'\r\nimport { components } from '../actions/actionTypes'\r\n\r\nconst all = (state = [], action) => {\r\n  switch (action.type) {\r\n    case components.createList:\r\n      return  [...action.payload];\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst searched = (state = [], action) => {\r\n  switch (action.type) {\r\n    case components.searchList:\r\n      return  [...action.payload];\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst packagesReducer = combineReducers({\r\n    all,\r\n    searched\r\n})\r\n\r\nexport default packagesReducer","import { combineReducers } from 'redux'\r\nimport queryReducer from '../reducers/query'\r\nimport packagesReducer from '../reducers/packages'\r\nimport filterReducer from '../reducers/filters'\r\nimport componentReducer from '../reducers/components'\r\n\r\nconst rootReducer = combineReducers({\r\n    packages: packagesReducer,\r\n    query: queryReducer,\r\n    filter: filterReducer,\r\n    components: componentReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport store from './app/store';\r\nimport 'typeface-rubik'\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n//import 'bootstrap/dist/css/bootstrap-theme.min.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}